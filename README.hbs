[![NPM version](https://img.shields.io/npm/v/firebase-sagas.svg?style=flat-square)](https://npmjs.org/package/firebase-sagas)
[![NPM downloads](https://img.shields.io/npm/dm/firebase-sagas.svg?style=flat-square)](https://npmjs.org/package/firebase-sagas)
# firebase-sagas
A [redux-saga](https://github.com/redux-saga/redux-saga/) integration for [firebase (auth, database)](https://firebase.google.com/):
- Authentication and realtime database support
- Listen for value and child events (`value`, `child_added`, `child_removed`, `child_changed`, `child_moved`)
- Snapshots as array support
- Sorting and filtering data ( `orderByChild`, `orderByKey`, `orderByValue`, `orderByPriority`, `limitToLast`, `limitToFirst`, `startAt`, `endAt`, `equalTo`)

Try out the example [app](https://fir-sagas.firebaseapp.com/)

## Install
```bash
npm install firebase-sagas --save
```
or
```bash
yarn add firebase-sagas
```

## Getting started
```js
import { createFirebaseSagas } from 'firebase-sagas';

const config = {
  apiKey: 'YOUR_API_KEY',
  authDomain: 'YOUR_AUTH_DOMAIN',
  databaseURL: 'YOUR_DATABASE_URL',
  projectId: 'YOUR_PROJECT_ID',
  storageBucket: 'YOUR_STORAGE_BUCKET',
  messagingSenderId: 'YOUR_MESSAGING_SENDER_ID'
};

const firebaseSagas = createFirebaseSagas(config);

...

function* fetchDataSaga(action) {
  try {
    const { query } = action.payload;
    const data = yield call(firebaseSagas.database.once, '/data', 'value', { query, asArray: true });
    yield put(fetchDataSuccess(data));
  }
  catch(error) {
    yield put(fetchDataFailure(error));
  }
}

...
```

## API
{{>main}}

## License
[MIT](https://github.com/hupe1980/firebase-sagas/blob/master/LICENSE)
